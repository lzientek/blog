---
layout: post
title:  "Comparatif des solutions de features flags du marchÃ©"
date:   2020-12-14 10:27:18 +0100
author: Lucas ZIENTEK
categories: dev
tags: [feature flags, dev, trunk based, CI]
---

Dans le cadre d'un comparatif que j'ai dÃ» faire chez [Mistertemp'](https://www.welcometothejungle.com/fr/companies/mistertemp) pour trouver la solution de __feature flag__ la plus adaptÃ©e, j'ai rÃ©coltÃ© avec mes collÃ¨gues Ã©normÃ©ment d'informations. Je voulais donc vous prÃ©senter quelques solutions de feature flags, leurs points forts et leurs points faibles pour que vous puissiez choisir celui qui vous convient le mieux.

## Avant de commencer
Toutes les solutions ont Ã©tÃ© testÃ©es sur un projet test en nodejs et reactjs. Il y a peut-Ãªtre des subtilitÃ©s si vous utilisez d'autres langages.

Les critÃ¨res de comparaisons sont les suivants :
- L'existance d'une UI/dashboard d'administration des features flags.
- La maturitÃ© du projet.
- La gestion multi-environnement.
- La segmentation des utilisateurs.
- PossibilitÃ©s de faire des canary release.
- PossibilitÃ© de faire du remote config.
- type de mise Ã  jour des flags

Le tout avec une petite conclusion personnelle qui n'engage que moi.

## 1. Projets feature flags open source
J'ai volontairement choisi de sÃ©parer les projets open source des autres. Les solutions SAAS pouvant rapidement devenir onÃ©reuse je souhaitais mettre en avant les solutions on-premise gratuites et open source.

### 1.1. Flagsmith

[Flagsmith](https://www.flagsmith.com/) (ex bullet train) est pour moi la solution open source la plus mature, par Ã§a durÃ© d'existence, la communautÃ© et les features proposÃ©es.  

| Features |  |
|-----|-----|
| Dashboard | : âœ… : |
| MaturitÃ© | : âœ… : | 
| Multi-env | : âœ… :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : ğŸ”´ (mais possible avec la segmentation) : |
| Config | : âœ… : |
| MAJ | 1 fetch par flags / __temps rÃ©el__ |

__Conclusion:__  
Flagsmith est une solution idÃ©ale si vous souhaitez heberger vous mÃªme votre outil de feature flags. Il est mature propose beaucoup de fonctionnalitÃ©s souhaitÃ©es et le cÃ´tÃ© open source permet d'influer sur la road map et de contribuer. L'interface n'est pas dÃ©gueulasse et relativement facile Ã  utiliser. Il existe Ã©normÃ©ment de SDK et permet donc d'Ãªtre intÃ©grÃ© facilement Ã  tous vos projets. L'installation se fait rapidement sur un environnement gÃ©rant docker, mais il existe aussi une solution cloud si vous voulez pas gÃ©rer l'infra.

### 1.2. Unleash
[Unleash](https://unleash.github.io/) est une solution qui est encore a ces dÃ©buts, aucune rÃ©el structure derriÃ¨re il est aujourd'hui maintenu comme un side project. Cela se ressent sur l'interface, sur les features et sur la rÃ©activitÃ© de la communautÃ©. Il a malgrÃ© tout le mÃ©rite d'exister pour Ãªtre une alternative Ã  flagsmith.

| Features |  |
|-----|-----|
| Dashboard | : ğŸ”¶ : |
| MaturitÃ© | : ğŸ”¶ : | 
| Multi-env | : ğŸ”´ :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : âœ… : |
| Config | : ğŸ”¶ : |
| MAJ | Fetch pÃ©riodique (pas de temps rÃ©el mais un serveur moins solicitÃ©) |

__Conclusion:__  
Unleash est une solution en devenir, elle a l'avantage d'Ãªtre lÃ©gÃ¨re. Il manque Ã  mon sens quelques points essentiels, le dashboard n'a pas d'authentification par dÃ©faut, il n'existe pas de gestion des environnements pas pratique pour activer ou non des features toggles uniquement en dev, pre-prod ou prod. Il reste par contre un point fort a unleash c'est les diffÃ©rentes solutions de rollout/activation des features flags.

## 2. Solutions Feature toggles SAAS

Les solutions saas se ressemblent toutes beaucoup, je vais essayer de ne pas trop rentrer dans le pricing, mais cela peut vite devenir un facteur important en fonction de votre volume d'utilisateurs.

### 2.1. Split.io

| Features |  |
|-----|-----|
| Dashboard | : âœ… : |
| MaturitÃ© | : âœ… : | 
| Multi-env | : âœ… :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : ğŸ”¶  Pourcentage de traffic facilement alouable : |
| Config | : âœ…  De la config peut-etre associÃ© a chaque feature flag : |
| MAJ | Event server mÃ©ttant a jour les frontend et api. __Temps rÃ©el__. |
| [Pricing](https://www.split.io/pricing/) | Pricing sur demande mais il existe une version gratuite avec seulement quelques feature flags et des fonctionnalitÃ©s limitÃ©es |

__Conclusion:__  
Solution tout Ã  fait fonctionnel, l'interface d'administration est un peu lourde mais permet pas mal de conditionnel pour activer ou non un feature flag. Il manque juste la partie canary release. Les SDK sont faciles d'utilisation et Ã  configurer.  
__Bonne solution__


### 2.2. Optimizely

| Features |  |
|-----|-----|
| Dashboard | : âœ… : |
| MaturitÃ© | : âœ… : | 
| Multi-env | : âœ… :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : ğŸ”´ : |
| Config | : ğŸ”´ : |
| MAJ | Fetch pÃ©riodique pour rÃ©cupÃ©rer toutes les feature flags (toutes les 5minutes) |
| [Pricing](https://www.optimizely.com/plans/) | Pricing sur demande, mais il existe une version gratuite avec seulement __un__ feature flag. |

__Conclusion:__  
Solution pas forcÃ©ment adaptÃ© aux features flags mais plutot Ã  de l'A/B testing. On vois bien sur ce produit qu'on est trÃ¨s orientÃ© marketing.  
__Solution bof bof.__ 

### 2.3. Launchdarkly

| Features |  |
|-----|-----|
| Dashboard | : âœ… : |
| MaturitÃ© | : âœ… : | 
| Multi-env | : âœ… :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : ğŸ”´ : |
| Config | : âœ…  De la config peut-etre associÃ© a chaque feature flag : |
| MAJ | Event server mÃ©ttant a jour les frontend et api. __Temps rÃ©el__. |
| [Pricing](https://launchdarkly.com/pricing/) | Pricing basÃ© sur le nombre d'utilisateurs uniques par mois (MAUS). (Commence Ã  75$/mois pour 1k utilisateurs) |

__Conclusion:__  
Solution fonctionnel, l'interface d'administration est un peu mieux que split.io, mais on peut vite s'y perdre. Il manque la partie canary release ici aussi. Les SDK sont faciles d'utilisation et Ã  configurer et celui de react exÃ©cute un rerender avec les nouveaux flag (gros effet waouh du vrai temps rÃ©el).  
__Bonne solution.__

### 2.4. Configcat

| Features |  |
|-----|-----|
| Dashboard | : âœ… : |
| MaturitÃ© | : âœ… : | 
| Multi-env | : âœ… :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : ğŸ”´ : |
| Config | : âœ… : |
| MAJ | Fetch pÃ©riodique pour rÃ©cupÃ©rer toutes les features flags de 1 secondes Ã  plusieurs heures. |
| [Pricing](https://configcat.com/pricing/) | Pricing trÃ¨s granulaires, de gratuit Ã  2500$/mois. Ils ont mÃªme un [calculateur](https://configcat.com/calculator/) pour trouver le pricing le plus adaptÃ©.  |

__Conclusion:__  
Je n'ai pas pu trop toucher a configcat, mais leur dashboard a plusieurs niveau de dÃ©coupage avec plusieurs produits, configs et environnements. On peut facilement changer plusieurs feature-flags d'un coup avec la notion de config. Une interface facile d'utilisation et intuitive. Petit bonus ils plantent des arbres ğŸŒ³.  
__Bonne solution__

### 2.5. Rollout

| Features |  |
|-----|-----|
| Dashboard | : âœ… : |
| MaturitÃ© | : âœ… : | 
| Multi-env | : âœ… :  |
| Segmentation utilisateurs | : âœ… : |
| Canary | : âœ… : |
| Config | : âœ… : |
| MAJ | : Non testÃ© : |
| [Pricing](https://rollout.io/pricing/) | Pricing basÃ© sur le nombre d'utilisateurs uniques par mois (MAUS) et le nombre d'utilisateurs de la plateforme. (Commence gratuitement pour 2k MAUS) |

__Conclusion:__  
Rollout de CloudBees est un produit bien fini qui coche toutes nos cases en terme de fonctionnalitÃ©s. Je n'ai pas pus vÃ©rifier les sdk et du coup je ne veux pas m'avancer dessus.  __TrÃ¨s Bonne solution__ (sur le papier).

## Mais que choisir
Maintenant c'est un peu Ã  vous de travailler. A mon avis,  [Flagsmith](#11-flagsmith) pour l'open source ou en on-premise est ce que je recommanderai. Dans le SaaS je m'orienterai plutot sur [Rollout](#25-rollout) ou [LaunchDarkly](#23-launchdarkly). Mais dites-moi en commentaire ou sur [tweeter](https://twitter.com/lucas42_) si vous voulez que j'aborde un autre projet et quelle solution de feature flags vous utilisez.